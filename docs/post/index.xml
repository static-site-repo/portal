<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Potioneer&#39;s Essays</title>
    <link>//:/post/</link>
    <description>Recent content in Posts on Potioneer&#39;s Essays</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 25 Oct 2018 12:22:16 +0800</lastBuildDate>
    
	<atom:link href="//:/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>軟體開發，除了方法論，還有⋯⋯</title>
      <link>//:/post/2018/10/methodology-and-criteria/</link>
      <pubDate>Thu, 25 Oct 2018 12:22:16 +0800</pubDate>
      
      <guid>//:/post/2018/10/methodology-and-criteria/</guid>
      <description>&lt;p&gt;在某些人眼中，「敏捷」是狂熱份子聚集的邪教。&lt;/p&gt;

&lt;p&gt;或許是被困在守舊勢力太久了，敏捷信徒不只有改變世界的熱情，更有捨我其誰的急迫感。不過，在傳播理念或推動改變時，若操之過急，忽略對方所處的情境、歷史及歷程，就很難有建設性對話。在這守舊勢力龐大的世界，自然很容易陣亡。&lt;/p&gt;

&lt;p&gt;但這還只是表象。歧見，單靠對話仍不足以化解，更需要在方法論層次達到理解，方可進退有據。&lt;/p&gt;

&lt;p&gt;尤其在看過《&lt;a href=&#34;https://www.books.com.tw/products/0010791756&#34;&gt;社會科學的理路&lt;/a&gt;》之後，我領悟到一些根源問題及槓桿解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>平凡人求生之道：別總是直球對決</title>
      <link>//:/post/2016/08/lifetime-keywords/</link>
      <pubDate>Mon, 29 Aug 2016 07:00:00 +0800</pubDate>
      
      <guid>//:/post/2016/08/lifetime-keywords/</guid>
      <description>&lt;p&gt;我們的人生，都走了許多冤枉路。回頭來看，總是希望能有系統化的方法，及早認清局勢，預作準備，以求更無懼於永不停歇的變局。&lt;/p&gt;

&lt;p&gt;這是我常常在尋覓的思維方法。&lt;/p&gt;

&lt;p&gt;雖然 Joe 在【&lt;a href=&#34;https://shop.darencademy.com/product/view/id/66&#34;&gt;大人學講座12：別總是直球對決：人生難題的系統思考法&lt;/a&gt;】的文案自謙：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>精讀 vs 泛讀</title>
      <link>//:/post/2016/08/reading-vs-extensive-reading/</link>
      <pubDate>Tue, 02 Aug 2016 23:30:00 +0800</pubDate>
      
      <guid>//:/post/2016/08/reading-vs-extensive-reading/</guid>
      <description>&lt;p&gt;每隔一陣子，就有「精讀」與「泛讀」孰優孰劣之辯論。&lt;/p&gt;

&lt;p&gt;其實，就像陳年經典《&lt;a href=&#34;http://www.books.com.tw/products/0010226097&#34;&gt;如何閱讀一本書&lt;/a&gt;》所說，兩種技巧都很需要：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;閱讀的速度並非只有單一的一種，重點在如何讀出&lt;strong&gt;不同的速度感&lt;/strong&gt;，知道在閱讀某種讀物時該用什麼樣的速度。&lt;/p&gt;

&lt;p&gt;更好的秘方是：在閱讀一本書的時候，&lt;strong&gt;慢不該慢到不值得，快不該快到有損於滿足與理解。&lt;/strong&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>專業態度的養成</title>
      <link>//:/post/2016/07/professional-attitude/</link>
      <pubDate>Sat, 30 Jul 2016 17:35:00 +0800</pubDate>
      
      <guid>//:/post/2016/07/professional-attitude/</guid>
      <description>&lt;p&gt;最近在面試資深軟體工程師。幾次下來，對幾家公司培養出來的員工素質，有個概括印象了（或許也帶點偏見）。&lt;/p&gt;

&lt;p&gt;一個最顛覆既定印象的心得是：不是在大公司就一定學得深，不是在新創就一定學得廣。&lt;/p&gt;

&lt;p&gt;重點仍在於自己。在於自己有沒有「&lt;strong&gt;系統思考&lt;/strong&gt;及&lt;strong&gt;換位思考&lt;/strong&gt;的&lt;strong&gt;自覺&lt;/strong&gt;及&lt;strong&gt;行動&lt;/strong&gt;」。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>轉大人，Part 2</title>
      <link>//:/post/2016/06/upgrade-adult-thinking-part2/</link>
      <pubDate>Sat, 04 Jun 2016 09:54:00 +0800</pubDate>
      
      <guid>//:/post/2016/06/upgrade-adult-thinking-part2/</guid>
      <description>在我所處的軟體研發圈中，最近也流行起「18+ Adult Manifesto」這種話題。 這就不得不佩服 J&amp;amp;B 取的「大人學」品牌名字，是多麼有遠見呀！ 小孩 vs 大</description>
    </item>
    
    <item>
      <title>多工切換：有趣的 Lean 觀點</title>
      <link>//:/post/2016/03/lean-perspective-of-multitasking/</link>
      <pubDate>Tue, 29 Mar 2016 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2016/03/lean-perspective-of-multitasking/</guid>
      <description>&lt;p&gt;系統思考，全局思考，是困難的；即使是貌似常識的場域，亦然。&lt;/p&gt;

&lt;p&gt;最近在看 &lt;a href=&#34;https://www.books.com.tw/products/0010662172&#34;&gt;&lt;em&gt;Lean Thinking&lt;/em&gt;&lt;/a&gt; 原典時，感觸更深。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>POLP：最小權限原則</title>
      <link>//:/post/2016/03/polp-intro/</link>
      <pubDate>Tue, 15 Mar 2016 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2016/03/polp-intro/</guid>
      <description>&lt;p&gt;在我開的 &lt;a href=&#34;http://get.soft-arch.net/ansible/&#34;&gt;Ansible Workshop&lt;/a&gt; 中，不管是課前的【許願池】，還是課程現場的 Q&amp;amp;A，總有一個熱門議題：「如何確保系統是安全的？」&lt;/p&gt;

&lt;p&gt;這是大哉問，不是單獨一門組態管理課就能探討到令人滿意的地步（資安也不是我所擅長的⋯⋯）。不過，被問到的次數太多了，我還是給個簡單的導引吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps 核心元素的考古溯源</title>
      <link>//:/post/2016/03/origin-of-devops-elements/</link>
      <pubDate>Mon, 07 Mar 2016 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2016/03/origin-of-devops-elements/</guid>
      <description>&lt;p&gt;DevOps 和 Agile 的關係是什麼？DevOps 是源自 Agile 的嗎？&lt;/p&gt;

&lt;p&gt;我在〈&lt;a href=&#34;//:/post/2016/01/devops-goals-in-a-nutshell/&#34;&gt;一句話囊括 DevOps 的目標&lt;/a&gt;〉文中曾經簡略提過：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>電腦界的隱喻：組態管理</title>
      <link>//:/post/2016/03/metaphor-in-cm/</link>
      <pubDate>Wed, 02 Mar 2016 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2016/03/metaphor-in-cm/</guid>
      <description>&lt;p&gt;人類是很喜愛比喻／譬喻的。戰國時代的莊子愛用譬喻，常和莊子抬槓的惠施也愛譬喻，《說苑‧善說》甚至記載著這麼一段故事：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一句話囊括 DevOps 的目標</title>
      <link>//:/post/2016/01/devops-goals-in-a-nutshell/</link>
      <pubDate>Fri, 29 Jan 2016 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2016/01/devops-goals-in-a-nutshell/</guid>
      <description>&lt;p&gt;TL;DR&lt;br /&gt;
&lt;em&gt;DevOps is a set of practices intended to reduce the time between committing a change to a system and the change being placed into normal production, while ensuring high quality.&lt;/em&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps 是圓的，找到立足點就是頂點</title>
      <link>//:/post/2015/12/devops-1st-step/</link>
      <pubDate>Mon, 28 Dec 2015 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2015/12/devops-1st-step/</guid>
      <description>&lt;p&gt;自從 IT 相關媒體開始傳頌 2009 年蔚為經典的 Flickr 經驗 “&lt;a href=&#34;https://youtu.be/LdOe18KhtT4&#34;&gt;10+ Deploys per Day&lt;/a&gt;”、2014 年 Marissa Mayer 的鐵桿作風「&lt;a href=&#34;http://www.ithome.com.tw/news/99283&#34;&gt;沒有持續交付，專案不得上線，我不是在說笑&lt;/a&gt;」之後，頓時 DevOps 成為 IT 界新的焦慮源。我還聽說有高層在聽完兩天 &lt;a href=&#34;https://www.ithome.com.tw/article/98527&#34;&gt;DevOps 2015 研討會&lt;/a&gt;之後，回頭要求 IT 部門要師法 2009 年的 Flickr 做到「10+ Deploys per Day」。&lt;/p&gt;

&lt;p&gt;聽了很潮的新觀念，就訂不合理的 KPI，這也是「負能量」呀！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CI 怎樣帶你遠離平庸？</title>
      <link>//:/post/2015/12/ci-effect/</link>
      <pubDate>Tue, 22 Dec 2015 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2015/12/ci-effect/</guid>
      <description>前天我的文章〈CI 是條不歸路〉提到：「CI/CD/DevOps 既是條不歸路，更是大躍進之路：一旦踏出第一步，就注定你會不斷接觸『遠離平庸』的</description>
    </item>
    
    <item>
      <title>CI 是條不歸路</title>
      <link>//:/post/2015/12/ci-no-turning-back/</link>
      <pubDate>Mon, 21 Dec 2015 08:00:00 +0800</pubDate>
      
      <guid>//:/post/2015/12/ci-no-turning-back/</guid>
      <description>今年九月初參加完 DevOps 2015 之後，有感而發，寫了兩則 tweets： 說實在的，打從 1999 年 Kent Beck 經典著作 Extreme Programming Explained 問世，整個軟體文化就被徹底分裂成兩個國度。以 agile</description>
    </item>
    
    <item>
      <title>升級成大人版的思維作業系統</title>
      <link>//:/post/2015/09/upgrade-adult-thinking/</link>
      <pubDate>Tue, 15 Sep 2015 23:02:00 +0800</pubDate>
      
      <guid>//:/post/2015/09/upgrade-adult-thinking/</guid>
      <description>&lt;p&gt;兩個週末【&lt;a href=&#34;https://shop.darencademy.com/product/view/id/28&#34;&gt;A101 職場人際關係與優勢策略工作坊&lt;/a&gt;】，一枚價值 14 PDU 的結業證書。雖然對沒有 PMP 證照企圖的我來說，帳面數字沒什麼用處；但獲得的，絕對遠遠超過這 14 PDU。&lt;/p&gt;

&lt;p&gt;用 14 PDU 換來 Bryan 積蓄 15 年的內功，還有什麼更划算的事情呢？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>