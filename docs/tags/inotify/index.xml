<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Inotify on Potioneer&#39;s Essays</title>
    <link>//william-yeh.net/tags/inotify/</link>
    <description>Recent content in Inotify on Potioneer&#39;s Essays</description>
    <generator>Hugo</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 17 Jun 2019 17:00:00 +0800</lastBuildDate>
    <atom:link href="//william-yeh.net/tags/inotify/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto-Reload from ConfigMap</title>
      <link>//william-yeh.net/post/2019/06/autoreload-from-configmap/</link>
      <pubDate>Mon, 17 Jun 2019 17:00:00 +0800</pubDate>
      <guid>//william-yeh.net/post/2019/06/autoreload-from-configmap/</guid>
      <description>&lt;p&gt;My previous article &amp;ldquo;&lt;a href=&#34;//william-yeh.net/post/2019/06/inotify-in-containers/&#34;&gt;Inotify in Containers&lt;/a&gt;&amp;rdquo; has demonstrated that when ConfigMap is mounted as directories, any changes in the ConfigMap will propagate to related pods, and can be detected with &lt;code&gt;inotify&lt;/code&gt;-like APIs.&lt;/p&gt;&#xA;&lt;p&gt;A follow-up question might be: what should a well-behaved application react to this trigger accordingly? What if it&amp;rsquo;s a ill-designed application?&lt;/p&gt;&#xA;&lt;p&gt;To clarify this I&amp;rsquo;ve conducted a series of experiments for 3 possible configmap-reloading  strategies:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Built-in auto-reloading apps&lt;/li&gt;&#xA;&lt;li&gt;External signals&lt;/li&gt;&#xA;&lt;li&gt;Pod rollout&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this article I&amp;rsquo;m going to explain the experiments and preliminary findings.  All experiment materials are available in the &lt;a href=&#34;https://github.com/William-Yeh/configmap-auto-reload&#34;&gt;configmap-auto-reload&lt;/a&gt; repo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Inotify in Containers</title>
      <link>//william-yeh.net/post/2019/06/inotify-in-containers/</link>
      <pubDate>Mon, 10 Jun 2019 18:00:00 +0800</pubDate>
      <guid>//william-yeh.net/post/2019/06/inotify-in-containers/</guid>
      <description>&lt;p&gt;It is usually necessary to watch for any changes in file systems, both in development and in production modes. For example, in the development mode &lt;a href=&#34;https://webpack.js.org/&#34;&gt;Webpack&lt;/a&gt; can watch files and recompile whenever they change; in the production mode &lt;a href=&#34;https://github.com/hashicorp/consul-template&#34;&gt;Consul Template&lt;/a&gt; can watch runtime configs and invoke specific applications whenever they change.&lt;/p&gt;&#xA;&lt;p&gt;These are well-known scenarios in traditional pre-container world.  How about the container world? Do they behave the same in the new container world?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
