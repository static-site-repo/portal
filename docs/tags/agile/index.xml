<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agile on Potioneer&#39;s Essays</title>
    <link>//william-yeh.net/tags/agile/</link>
    <description>Recent content in Agile on Potioneer&#39;s Essays</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 19 Dec 2018 08:00:00 +0800</lastBuildDate>
    
	<atom:link href="//william-yeh.net/tags/agile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>為了精準估算，你必須付出什麼代價？</title>
      <link>//william-yeh.net/post/2018/12/agile-measurement/</link>
      <pubDate>Wed, 19 Dec 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/12/agile-measurement/</guid>
      <description>&lt;link rel=&#34;stylesheet&#34; href=&#34;//william-yeh.net/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34; style=&#34;max-width:30em&#34;&gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;//william-yeh.net/img/2018/12/dilbert-measurement.jpg&#34; alt=&#34;開場對話&#34;/&gt;
    &lt;/div&gt;
    &lt;a href=&#34;//william-yeh.net/img/2018/12/dilbert-measurement.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
      &lt;figcaption&gt;
          &lt;p&gt;開場對話&lt;/p&gt;
      &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;


&lt;p&gt;研發團隊，常會被問到一個問題：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「請問一下，這個Ａ功能，大概要多久才能完成？」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;這個問題，不會因為你跑的是敏捷，就自動免疫。&lt;/p&gt;

&lt;p&gt;那麼，身為經過敏捷思維洗禮的人，該如何做出合宜的應對？&lt;/p&gt;

&lt;p&gt;我在 &lt;a href=&#34;https://agilekaohsiung.kktix.cc/events/agiletourkaohsiung2018&#34;&gt;Agile Tour Kaohsiung 2018&lt;/a&gt; 開辦一場 2.5 小時的工作坊，帶領大家親自體驗這個議題。&lt;/p&gt;

&lt;p&gt;不過，這個題材的背後，其實還有三段故事。&lt;/p&gt;

&lt;p&gt;故事，要從一年半前講起。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>改變／改革：流程與衡量指標</title>
      <link>//william-yeh.net/post/2018/12/process-and-metrics/</link>
      <pubDate>Fri, 07 Dec 2018 13:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/12/process-and-metrics/</guid>
      <description>改革，很不容易；摧毀改革，卻很簡單。知名的改革框架，莫不注重改革的整合與固化。 敏捷亦然。 敏捷三叔公 David Ko 在 Scrum 社群裡轉貼了一篇文章，一則可悲的故</description>
    </item>
    
    <item>
      <title>Scrum 沒有明說的事：休耕期</title>
      <link>//william-yeh.net/post/2018/12/fallow/</link>
      <pubDate>Tue, 04 Dec 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/12/fallow/</guid>
      <description>&lt;p&gt;Scrum 的官方白皮書 &lt;a href=&#34;https://www.scrumguides.org/&#34;&gt;&lt;em&gt;The Scrum Guide&lt;/em&gt;&lt;/a&gt; 非常輕薄短小（像 &lt;a href=&#34;https://scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-US.pdf&#34;&gt;Nov 2017 版&lt;/a&gt;只有 19 頁），它的理念是：只制定最核心的原則、價值、角色、活動、產出物，其餘的則交給團隊根據經驗主義 &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 去調適出最適合自己的細節。&lt;/p&gt;

&lt;p&gt;想當然爾，有很多事，Scrum 並沒有明說。&lt;/p&gt;

&lt;p&gt;那麼，沒有明說的事，就不需要做、就不能做了嗎？做了，就違反 Scrum 嗎？&lt;/p&gt;

&lt;p&gt;這是許多奉 &lt;a href=&#34;https://www.scrumguides.org/&#34;&gt;&lt;em&gt;The Scrum Guide&lt;/em&gt;&lt;/a&gt; 為圭臬的人，常有的盲點。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>為什麼 LeSS 這麼迷人，可是總是輸給 SAFe？</title>
      <link>//william-yeh.net/post/2018/11/why-safe-over-less/</link>
      <pubDate>Fri, 30 Nov 2018 15:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/11/why-safe-over-less/</guid>
      <description>在一篇 Terry &amp;amp; Ruddy 對話紀錄中，看到一系列有趣的 LeSS vs. SAFe 討論： 「為什麼 LeSS 這麼迷人，可是總是輸給 SAFe？」 「SAFe 是敏捷跟辦公室政治作出了完美的妥協</description>
    </item>
    
    <item>
      <title>DevOps 的價值與指標</title>
      <link>//william-yeh.net/post/2018/11/devops-value/</link>
      <pubDate>Wed, 28 Nov 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/11/devops-value/</guid>
      <description>看完〈敏捷的價值與指標〉之後，很自然的會進一步追問：「那麼，什麼才是 DevOps 圈子所認定的價值，以及對應的指標，尤其是領先指標？」 這問題其實比較容易</description>
    </item>
    
    <item>
      <title>敏捷的價值與指標</title>
      <link>//william-yeh.net/post/2018/11/agile-value/</link>
      <pubDate>Tue, 27 Nov 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/11/agile-value/</guid>
      <description>&lt;p&gt;同溫層朋友提出一則有趣的&lt;a href=&#34;https://www.facebook.com/groups/179345672472/permalink/10156092663467473/&#34;&gt;提問&lt;/a&gt;：&lt;/p&gt;


&lt;link rel=&#34;stylesheet&#34; href=&#34;//william-yeh.net/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34; style=&#34;max-width:30em&#34;&gt;
  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;//william-yeh.net/img/2018/11/agile-value-post.png&#34; alt=&#34;如何衡量敏捷的成效？ by Howie Yu (2018-11-23)&#34;/&gt;
    &lt;/div&gt;
    &lt;a href=&#34;//william-yeh.net/img/2018/11/agile-value-post.png&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
      &lt;figcaption&gt;
          &lt;p&gt;如何衡量敏捷的成效？ by Howie Yu (2018-11-23)&lt;/p&gt;
      &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Agile PMO</title>
      <link>//william-yeh.net/post/2018/11/agile-pmo/</link>
      <pubDate>Thu, 15 Nov 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/11/agile-pmo/</guid>
      <description>&amp;ldquo;Project&amp;rdquo; 一詞，儼然成為 agile 及 DevOps 圈子的禁語。 譬如說，敏捷祖師爺 Martin Fowler 的網站有一篇 &amp;ldquo;Products Over Projects&amp;rdquo; 文章，DevOps 巨著 The DevOps Handbook 第 7.7 節的篇名叫做〈投資於服務和產品，而</description>
    </item>
    
    <item>
      <title>Lean Startup 的判準</title>
      <link>//william-yeh.net/post/2018/11/lean-startup-criteria/</link>
      <pubDate>Thu, 01 Nov 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/11/lean-startup-criteria/</guid>
      <description>《商業周刊》第 1615 期，有一篇總編輯的話〈拖鞋戰法，先做了再修！〉： 網路時代的敏捷開發法，強調「先做了再修改」，中心思想不是「預測」(predi</description>
    </item>
    
    <item>
      <title>敏捷的判準</title>
      <link>//william-yeh.net/post/2018/10/agile-criteria/</link>
      <pubDate>Wed, 31 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/10/agile-criteria/</guid>
      <description>&lt;p&gt;今年暑假，我第一次去台中的國美館，參觀 &lt;a href=&#34;https://www.ntmofa.gov.tw/information_1078_86836.html&#34;&gt;2018 年全國美術展&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;這年度盛會，分成油畫、水彩、版畫、水墨等十大類。大開眼界之餘，也不禁有個奇想：為什麼要分這麼多類別來競賽？為什麼不選出一個跨十大類別的首獎，就像武林盟主一樣？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>軟體開發，除了方法論，還有⋯⋯</title>
      <link>//william-yeh.net/post/2018/10/methodology-and-criteria/</link>
      <pubDate>Thu, 25 Oct 2018 12:22:16 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2018/10/methodology-and-criteria/</guid>
      <description>&lt;p&gt;在某些人眼中，「敏捷」是狂熱份子聚集的邪教。&lt;/p&gt;

&lt;p&gt;或許是被困在守舊勢力太久了，敏捷信徒不只有改變世界的熱情，更有捨我其誰的急迫感。不過，在傳播理念或推動改變時，若操之過急，忽略對方所處的情境、歷史及歷程，就很難有建設性對話。在這守舊勢力龐大的世界，自然很容易陣亡。&lt;/p&gt;

&lt;p&gt;但這還只是表象。歧見，單靠對話仍不足以化解，更需要在方法論層次達到理解，方可進退有據。&lt;/p&gt;

&lt;p&gt;尤其在看過《&lt;a href=&#34;https://www.books.com.tw/products/0010791756&#34;&gt;社會科學的理路&lt;/a&gt;》之後，我領悟到一些根源問題及槓桿解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>從「改變」角度看《魔戒》</title>
      <link>//william-yeh.net/post/2016/05/change-viewpoint-on-lord-of-rings/</link>
      <pubDate>Wed, 25 May 2016 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2016/05/change-viewpoint-on-lord-of-rings/</guid>
      <description>&lt;p&gt;今年一月，參加 &lt;a href=&#34;http://kojenchieh.pixnet.net/blog&#34;&gt;David Ko&lt;/a&gt; 舉辦的一場敏捷轉型活動，從中學到了一個有趣的分析工具：Lean Change Canvas。&lt;/p&gt;

&lt;p&gt;知道了一個好東西，自然要追本溯源，加深加廣。便研讀相關資料：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>向工廠管理致敬</title>
      <link>//william-yeh.net/post/2016/04/learn-from-plant-mgmt/</link>
      <pubDate>Fri, 22 Apr 2016 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2016/04/learn-from-plant-mgmt/</guid>
      <description>&lt;p&gt;身為徹頭徹尾的軟體人，在軟體產業待久了，總會對「硬」一點的產業，尤其是製造業，有莫名的成見，以為他們是僵固的、反人性的。從 1972 年「&lt;a href=&#34;https://en.wikipedia.org/wiki/Software_crisis&#34;&gt;軟體危機&lt;/a&gt;」引發的論述當中，更加深軟體人的印象：製造業的經驗，是無法直接套用到軟體界的；我們是截然不同的國度。&lt;/p&gt;

&lt;p&gt;不過，近十年來許多軟體界的流程改革，尤其是同屬 Agile 陣營的 Scrum 及 Kanban，居然有許多元素是從製造業&lt;del&gt;偷竊&lt;/del&gt;學習而來。譬如說&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>多工切換：有趣的 Lean 觀點</title>
      <link>//william-yeh.net/post/2016/03/lean-perspective-of-multitasking/</link>
      <pubDate>Tue, 29 Mar 2016 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2016/03/lean-perspective-of-multitasking/</guid>
      <description>&lt;p&gt;系統思考，全局思考，是困難的；即使是貌似常識的場域，亦然。&lt;/p&gt;

&lt;p&gt;最近在看 &lt;a href=&#34;https://www.books.com.tw/products/0010662172&#34;&gt;&lt;em&gt;Lean Thinking&lt;/em&gt;&lt;/a&gt; 原典時，感觸更深。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps 核心元素的考古溯源</title>
      <link>//william-yeh.net/post/2016/03/origin-of-devops-elements/</link>
      <pubDate>Mon, 07 Mar 2016 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2016/03/origin-of-devops-elements/</guid>
      <description>&lt;p&gt;DevOps 和 Agile 的關係是什麼？DevOps 是源自 Agile 的嗎？&lt;/p&gt;

&lt;p&gt;我在〈&lt;a href=&#34;//william-yeh.net/post/2016/01/devops-goals-in-a-nutshell/&#34;&gt;一句話囊括 DevOps 的目標&lt;/a&gt;〉文中曾經簡略提過：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CI 怎樣帶你遠離平庸？</title>
      <link>//william-yeh.net/post/2015/12/ci-effect/</link>
      <pubDate>Tue, 22 Dec 2015 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2015/12/ci-effect/</guid>
      <description>前天我的文章〈CI 是條不歸路〉提到：「CI/CD/DevOps 既是條不歸路，更是大躍進之路：一旦踏出第一步，就注定你會不斷接觸『遠離平庸』的</description>
    </item>
    
    <item>
      <title>CI 是條不歸路</title>
      <link>//william-yeh.net/post/2015/12/ci-no-turning-back/</link>
      <pubDate>Mon, 21 Dec 2015 08:00:00 +0800</pubDate>
      
      <guid>//william-yeh.net/post/2015/12/ci-no-turning-back/</guid>
      <description>今年九月初參加完 DevOps 2015 之後，有感而發，寫了兩則 tweets： 說實在的，打從 1999 年 Kent Beck 經典著作 Extreme Programming Explained 問世，整個軟體文化就被徹底分裂成兩個國度。以 agile</description>
    </item>
    
  </channel>
</rss>